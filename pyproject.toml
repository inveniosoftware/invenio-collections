[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name="invenio-collections"
description = "Invenio module for organizing metadata into collections."
authors=[
  {name = "CERN", email = "info@inveniosoftware.org"}
]
classifiers = [
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
   "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ["version"]
keywords = ["invenio", "inveniordm", "rdm", "collections"]
license = {file = "LICENSE"}
readme = "README.rst"

requires-python = ">=3.9"
dependencies = [
  "invenio-administration>=4.0.0,<5.0.0",
  "invenio-communities>=20.0.0,<21.0.0",
  "invenio-rdm-records>=20.0.0,<21.0.0",
  "invenio-records-resources>=8.0.0,<9.0.0",
  "invenio-search-ui>=4.0.0,<5.0.0",
]
urls = {Repository = "https://github.com/inveniosoftware/invenio-collections"}

[project.optional-dependencies]
tests=[
    "invenio-app>=2.0.0,<3.0.0",
    "invenio-db[postgresql,mysql]>=2.0.0,<3.0.0",
    "pytest-black>=0.3.0",
    "pytest-invenio>=3.0.0,<4.0.0",
    "sphinx>=4.5",
]
opensearch2 = [
    "invenio-search[opensearch2]>=3.0.0,<4.0.0",
]

# Entrypoints
[project.entry-points."invenio_base.apps"]
invenio_collections = "invenio_collections.ext:InvenioCollections"

[project.entry-points."invenio_base.api_apps"]
invenio_collections = "invenio_collections.ext:InvenioCollections"

[project.entry-points."invenio_base.api_blueprints"]
invenio_collections = "invenio_collections.views:create_bp"

[project.entry-points."invenio_celery.tasks"]
invenio_collections = "invenio_collections.tasks"

[project.entry-points."invenio_db.alembic"]
invenio_collections = "invenio_collections:alembic"

[project.entry-points."invenio_db.models"]
invenio_collections = "invenio_collections.models"

# Tools in alphabetical order
[tool.babel.compile_catalog]
directory = "invenio_collections/translations/"
use_fuzzy = true

[tool.babel.extract_messages]
copyright_holder = "CERN"
msgid_bugs_address = "info@inveniosoftware.org"
mapping_file = "babel.ini"
output_file = "invenio_collections/translations/messages.pot"
add_comments = "NOTE"

[tool.babel.init_catalog]
input_file = "invenio_collections/translations/messages.pot"
output_dir = "invenio_collections/translations/"

[tool.babel.javascript]
"**.js" = { encoding = "utf-8", extract_messages = ["$_", "jQuery._"] }

[tool.babel.jinja2]
"**/templates/**.html" = { encoding = "utf-8" }

[tool.babel.python]
"**.py" = { encoding = "utf-8" }

[tool.babel.update_catalog]
input_file = "invenio_collections/translations/messages.pot"
output_dir = "invenio_collections/translations/"

[tool.hatch.version]
path = "invenio_collections/__init__.py"

[tool.isort]
profile = "black"

[tool.pydocstyle]
add_ignore = [
    "D401",
    "D403",
]
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--black --isort --pydocstyle --doctest-glob=\"*.rst\" --doctest-modules --cov=invenio_collections --cov-report=term-missing"
testpaths = [
    "docs",
    "tests",
    "invenio_collections",
]
filterwarnings = [
    "ignore::marshmallow.warnings.RemovedInMarshmallow4Warning",
]

